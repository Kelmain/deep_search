[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agentic-deep-search"
version = "0.1.0"
description = "An intelligent research assistant that transforms user queries into comprehensive reports through automated web search and AI-powered synthesis"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Armin Neumann"},
]
keywords = ["ai", "research", "search", "langchain", "gradio", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
]

dependencies = [
    "gradio>=5.0.0",
    "langchain>=0.1.0",
    "langchain-community",
    "duckduckgo-search>=8.1.1",
    "openai",
    "pydantic>=2.0.0",
    "python-dotenv",
    "langchain-google-genai>=2.1.7",
    "langgraph>=0.5.3",
    "numpy==2.2.6",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "ruff",
    "mypy",
    "coverage",
    "pre-commit",
]

[tool.hatch.build.targets.wheel]
packages = ["src/agentic_deep_search"]

[project.urls]
Homepage = "https://github.com/yourusername/agentic-deep-search"
Repository = "https://github.com/yourusername/agentic-deep-search"
Issues = "https://github.com/yourusername/agentic-deep-search/issues"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
]
